@import "src/scss/variables";
:host {
    display: block;
    width: 100%;
    margin-top: 20px;
}

// Property label
.prop-label {
    display: flex;
    justify-content: flex-start;
    align-items: center;
}

.error {
    user-select: none;
    color: var(--cl-error);
    /* opacity: 0.7; */
    margin-left: -2px;
    margin-right: 2px;
    cursor: pointer;
    //flex-shrink: 1;
    height: 0;
    margin-top: -25px;
    /* position: absolute; */
    //left: -22px;
    //top: 34px;
    transform: scale(0.9);
}

// Property container, contains label and property
.prop-container {
    position: relative;
    margin-bottom: 10px;
}

// Property, contains inputs, etc
.prop {
    position: relative;
    display: flex;
}

input {
    font-size: 16px;
    color: var(--cl-txt-main);
    height: 36px;
}

mat-form-field {
    position: absolute;
    visibility:hidden;
    width:0;
    height: 0;
    top: -4px;
}

// Date input
.input-date {
    max-width: 150px;
    padding-right: 28px;
}

// Time input
.input-time {
    margin-left: 10px;
    width: 100px;
}

// Button with icon for datepicker, etc.
.btn-icon {
    border: none;
    background-color: transparent;
    box-shadow: none;
    color: var(--cl-txt);

    & > mat-icon {
        margin: 0;
    }
}

.btn-date {
    position: absolute;
    bottom: 0;
    left: 110px;
}

// Select style
ng-select {
    display: inline-block;
    width: 50%;
}

// Expand button for serial type
.btn-expand {
    width: 36px;
    height: 36px;
    cursor: pointer;
    border: none;
    outline: none;
    transition: transform $animSpeed linear;
    &.closed {
        transform: scaleY(-1);
    }
}

// Forms inside serial fields
.prop-serial {
    & > .prop-label > label {
        cursor: pointer;
        user-select: none;
    }
    margin-left: -10px;
    margin-bottom: 0;
    width: calc(100% + 10px);
    & rf-form {
        overflow: hidden;
        width: calc(100% - 16px);
        margin-top: 0;
        margin-left: 16px;
        margin-bottom: 20px;
        padding-left: 25px;
        padding-bottom: 10px;
        padding-top: 10px;
        border-left: 1px solid #7c7c7c;
        position: relative;
        &::after {
            display: block;
            content: " ";
            width: 20px;
            border-bottom: 1px solid #7c7c7c;
            left: 0;
            bottom: 0;
            position: absolute;
        }

    }
}

// Make textarea use "rows" to calc height
textarea {
    height: auto;
    font-size: 16px;
    color: var(--cl-txt-main);
    &:focus {
        margin-bottom: -1px;
    }
}

// Link button for object fields
.btn-link {
    color: var(--cl-txt);
    width: 36px;
    height: 36px;
    text-decoration: none;
    border: none;
    opacity: 0.6;
    background-color: transparent;
    justify-content: center;
    align-items: center;
    margin-left: 4px;
    vertical-align: top;
    display: inline-flex;

    & > mat-icon {
        width: auto;
        height: auto;
        font-size: 32px;
        transform: scaleX(-1) translateY(-3px);
    }
}

//.badge {
//    position: absolute;
//    right: 8px;
//    top: 29px;
//    background-color: #c5bdbd;
//    color: white;
//    padding: 2px;
//    padding-left: 4px;
//    padding-right: 4px;
//    border-radius: 4px;
//    font-size: 14px;
//    font-weight: 400;
//}
